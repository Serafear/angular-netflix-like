{"ast":null,"code":"import { forwardRef, ElementRef } from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"inputBoxCustom\"];\nfunction InputBoxCustomComponent_div_5_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const error_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r3.message, \" \");\n  }\n}\nfunction InputBoxCustomComponent_div_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InputBoxCustomComponent_div_5_ng_container_1_div_1_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const error_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.form.get(ctx_r2.formControlName).hasError(error_r3.type));\n  }\n}\nfunction InputBoxCustomComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, InputBoxCustomComponent_div_5_ng_container_1_Template, 2, 1, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.errorMessages);\n  }\n}\nconst _c1 = [[[\"\", 8, \"label\"]]];\nconst _c2 = [\".label\"];\nexport let InputBoxCustomComponent = /*#__PURE__*/(() => {\n  class InputBoxCustomComponent {\n    onFocus(event) {\n      event.target.parentElement.querySelector('label').classList.add('focused');\n    }\n    onBlur(event) {\n      if (event.target.value === '') {\n        event.target.parentElement.querySelector('label').classList.remove('focused');\n      }\n    }\n    onInput(event) {\n      if (event.target.value) {\n        this.inputBoxCustom.nativeElement.classList.add('has-value');\n      } else {\n        this.inputBoxCustom.nativeElement.classList.remove('has-value');\n      }\n    }\n    inputClasses() {\n      const formControl = this.form.get(this.formControlName);\n      const classes = {\n        'valid': formControl.valid && (formControl.dirty || formControl.touched),\n        'invalid': formControl.invalid && (formControl.dirty || formControl.touched),\n        'has-value': formControl.value !== ''\n      };\n      return classes;\n    }\n  }\n  InputBoxCustomComponent.ɵfac = function InputBoxCustomComponent_Factory(t) {\n    return new (t || InputBoxCustomComponent)();\n  };\n  InputBoxCustomComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputBoxCustomComponent,\n    selectors: [[\"app-input-custom\"]],\n    viewQuery: function InputBoxCustomComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputBoxCustom = _t.first);\n      }\n    },\n    inputs: {\n      form: \"form\",\n      inputType: \"inputType\",\n      formControlName: \"formControlName\",\n      errorMessages: \"errorMessages\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputBoxCustomComponent),\n      multi: true\n    }]), i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c2,\n    decls: 6,\n    vars: 3,\n    consts: [[1, \"input-container\"], [\"id\", \"inputBoxCustom\", 3, \"type\", \"formControlName\", \"focus\", \"blur\", \"input\"], [\"inputBoxCustom\", \"\"], [\"for\", \"inputBoxCustom\"], [\"class\", \"error-messages\", 4, \"ngIf\"], [1, \"error-messages\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"]],\n    template: function InputBoxCustomComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1, 2);\n        i0.ɵɵlistener(\"focus\", function InputBoxCustomComponent_Template_input_focus_1_listener($event) {\n          return ctx.onFocus($event);\n        })(\"blur\", function InputBoxCustomComponent_Template_input_blur_1_listener($event) {\n          return ctx.onBlur($event);\n        })(\"input\", function InputBoxCustomComponent_Template_input_input_1_listener($event) {\n          return ctx.onInput($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"label\", 3);\n        i0.ɵɵprojection(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, InputBoxCustomComponent_div_5_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"type\", ctx.inputType)(\"formControlName\", ctx.formControlName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessages);\n      }\n    },\n    dependencies: [FormsModule, i1.DefaultValueAccessor, i1.NgControlStatus, ReactiveFormsModule, i1.FormControlName, CommonModule, i2.NgForOf, i2.NgIf],\n    styles: [\".input-container[_ngcontent-%COMP%]{position:relative;margin-bottom:20px}input[_ngcontent-%COMP%]{padding:20px 20px 20px 15px;font-size:16px;width:calc(100% + 55px);border:var(--input-border, 2px solid #8C8C8C);transition:all .3s;color:var(--input-content-color, black);background-color:var(--input-background-color, rgba(0, 0, 0, .4));box-sizing:border-box}input[_ngcontent-%COMP%]:focus{border:2px solid #4285f4;outline:none}input.valid[_ngcontent-%COMP%]{border:2px solid green}input.invalid[_ngcontent-%COMP%]{border:2px solid red}.has-value[_ngcontent-%COMP%]{border-bottom:2px solid blue}label[_ngcontent-%COMP%]{font-size:14px;transition:all .3s;position:absolute;left:15px;top:50%;transform:translateY(-50%);padding:0 5px;margin-left:-5px;color:#8c8c8c;cursor:text;pointer-events:none}label.focused[_ngcontent-%COMP%]{transform:translateY(-18px);font-size:10px;color:#8c8c8c}.error[_ngcontent-%COMP%]{color:red;font-size:12px;margin-top:5px}.input-form[_ngcontent-%COMP%]{display:flex;flex-direction:row;gap:1.4rem;justify-content:center;align-items:center;width:32rem}.input-btn[_ngcontent-%COMP%]{background-color:red;color:#fff;cursor:pointer;font-size:larger;border-bottom-right-radius:.5rem;border-top-right-radius:.5rem;height:2.648rem;width:12rem;border:2px solid red}.input-container[_ngcontent-%COMP%]{width:20rem}\"]\n  });\n  return InputBoxCustomComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}